문제 : 

  0보다 크거나 같고, 99보다 작거나 같은 정수가 주어질 때 다음과 같은 연산을 할 수 있다. 먼저 주어진 수가 10보다 작다면 앞에 0을 붙여 두 자리 수로 만들고, 
  각 자리의 숫자를 더한다. 그 다음, 주어진 수의 가장 오른쪽 자리 수와 앞에서 구한 합의 가장 오른쪽 자리 수를 이어 붙이면 새로운 수를 만들 수 있다.

  다음 예를 보자.

  26부터 시작한다. 2+6 = 8이다. 새로운 수는 68이다. 6+8 = 14이다. 새로운 수는 84이다. 8+4 = 12이다. 새로운 수는 42이다. 4+2 = 6이다. 새로운 수는 26이다.

  위의 예는 4번만에 원래 수로 돌아올 수 있다. 따라서 26의 사이클의 길이는 4이다.

  N이 주어졌을 때, N의 사이클의 길이를 구하는 프로그램을 작성하시오.
  
  입력
  첫째 줄에 N이 주어진다. N은 0보다 크거나 같고, 99보다 작거나 같은 정수이다.

정답 :

package quiz;

import java.util.Scanner;

public class Quiz3 {

	public static void main(String[] args) {

		Quiz3 q = new Quiz3();

		Integer inputNumber = q.inputInt();

		if (inputNumber == null) {
			System.out.println("오류");
			return;
		}
		
		int a = q.plusCycle(inputNumber);
		
		System.out.println(a);
		
	}

	// 값 입력 받기
	private Integer inputInt() {

		Scanner sc = new Scanner(System.in);
		Integer result = 0;

		try {
			result = sc.nextInt();
			if (result < 0 || result > 99) {
				return null;
			}
			if (result < 10) {
				result *= 10;

			}
			return result;
		} catch (Exception e) {
			System.out.println("정수를 입력하세요");
		}
		return null;
	}

	private Integer plusCycle(Integer number) {
		int first = number;
		Integer result = 0;
		int cycle = 0;
		
		for(;;) {
			if(result == 0) {
				result = first;
			}
			result = this.loop(result);
			cycle += 1;
			if(number == result) {
				return cycle;	
			}
		}
	}

	private Integer loop(Integer number) {
		
		int ten = number / 10;
		int one = number % 10;
		int plus = ten + one;
		if(plus>9) {
			plus = plus%10;
		}
			
		int result = one*10 + plus;
		
		
		return result;
	}

}
